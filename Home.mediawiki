Welcome to the bladeRF wiki!

This wiki will serve as a place to create some community-based documentation. Please feel free to create a page and link it here!

= Getting Started =

== bladeRF software build/installation ==

These guides describe the process of building and installing the bladeRF software from source code. If you've just received your bladeRF, this is the place to start.

* [[Getting Started: Linux Live Images]]
* [[Getting Started: Linux]]
* [[Getting Started: Windows]]
* [[Getting Started: Mac OSX]]
* [[Getting Started: Verifying Basic Device Operation]]

== Expansion Boards ==

* [[Getting Started: XB200 Transverter Board|Getting Started: XB-200 Transverter Board]]

== Accessories ==

=== External DC Power ===
The DC barrel jack on the bladeRF requires a 5V adapter, which should be rated to supply 1.5 to 2A.

The inner plug on the receptacle (on the bladeRF) is 2.5 mm and is +V.  The diameter of the plug on the power supply is 5.5mm and is -V.

As shown by page 14 on the [http://nuand.com/bladerf.pdf bladeRF schematic], the DC barrel jack is a  [http://www.mouser.com/ds/2/393/rapc712x_cd-371318.pdf Switchcraft RAPC712X]. Remember that both jumpers on J70 need to be moved when switching between USB power and the DC barrel input.

==== Wall Mount AC Adapters ====

* Artesyn [http://www.mouser.com/ds/2/633/da12-m_series_ds_06-04-14_79cfb80a76-520005.pdf DA12-050US-M]
** [http://www.mouser.com/ProductDetail/Artesyn-Embedded-Technologies/DA12-050US-M/?qs=emAWHUWp%252blcZAFicGRINPQ%3D%3D&kpid=330909095&gclid=CL6GvIqK4sUCFQemaQodIjgASA Mouser]
** [http://www.newark.com/artesyn-embedded-technologies/da12-050us-m/adaptor-ac-dc-medical-5v-2a/dp/68R2374?ost=68R2374&mckv=snlcgFYz2|pcrid|66379584501|plid|&CMP=KNC-GUSA-GEN-SHOPPING-ARTESYN_EMBEDDED_TECHNOLOGIES&CAGPSPN=pla&gclid=CLuThqWN4sUCFQ8waQodir0AOQ&CAWELAID=120185550001159808 Newark]
** [http://www.amazon.com/EMERSON-NETWORK-POWER-DA12-050US-M-EXTERNAL/dp/B00DLSM9F2/ref=sr_1_1?ie=UTF8&qid=1432735979&sr=8-1&keywords=DA12-050US-M Amazon]
 
= Help! =
* [[Troubleshooting]] - This guide lists common problems and issues, with some advice and potential fixes.
* [[Upgrading-bladeRF-firmware|Upgrading the bladeRF firmware]] - This guide describes both the normal firmware and bootloader-based firmware upgrade procedures.

= How-To's =
* [[FPGA Autoloading]]
* [[DC offset and IQ Imbalance Correction ]]
* [[bladeRF CLI Tips and Tricks]]
* [[Debugging dropped samples and identifying achievable sample rates]]
* OpenBTS
** [[Minimalistic build and run test for OpenBTS 5]]
** [https://imjuanpablo.wordpress.com/2015/02/14/should-you-need-openbts-on-your-bladerf/ "Should you need OpenBTS on your bladeRF"] on the ''The Sorrows of Interactive Media'' blog

= Projects and Blogs =
Feel free to share your favorite projects or blogs containing bladeRF and/or SDR content! Be sure to also check out the  [https://www.nuand.com/forums/viewforum.php?f=8 Project Showcase] on the forums.
* [[ATSC Transmitter]]
* Blog: [http://www.irrational.net/ Clayton's Domain]
** [http://www.irrational.net/2014/03/22/reverse-engineering-a-ceiling-fan/ Reverse Engineering a Ceiling Fan]
** [http://www.irrational.net/2014/03/02/digital-atv/ Digital amateur TV on 70cm, 33cm, and 23cm]
* Github: [https://github.com/argilo argilo's] [https://github.com/argilo/sdr-examples sdr-examples]
* Github: [https://github.com/drmpegs drmpeg's] projects
** [https://github.com/drmpeg/dtv-utils Utilities for SDR digital television]
** [https://github.com/drmpeg/gr-dvbs A DVB-S transmitter for GNU Radio]
** [https://github.com/drmpeg/gr-dvbs2 A DVB-S2 and DVB-S2X transmitter for GNU Radio]
** [https://github.com/drmpeg/gr-atscmap Mapping block for bladeRF ATSC modulater and RRC filter FPGA image]

= Tutorials and Related Reading =
Find or learn something interesting? Share it here!

== Signal Processing and RF ==
* [http://www.ieee.li/pdf/essay/quadrature_signals.pdf Quadrature Signals: Complex, But Not Complicated]
* [http://whiteboard.ping.se/SDR/IQ I/Q Data for Dummies]
* [http://ocw.mit.edu/resources/res-6-007-signals-and-systems-spring-2011/ MIT OpenCourseWare: Signals and Systems (Spring 2011), Prof Alan V. Oppenheim]
* [http://lea.hamradio.si/~s53mv/navsats/theory.html Complete GPS/GLONASS Receiver Design]
* [http://people.scs.carleton.ca/~barbeau/SDRBook/ Software Radio for Experimenters with GNU Radio, Octave and Python] by [http://people.scs.carleton.ca/~barbeau/ Michel Barbeau]
* [http://vanilla.ceat.okstate.edu/assume_synchronized.pdf Let's Assume the System Is Synchronized] by [http://electrical.sdsu.edu/faculty/frederick_harris.html Fredric J. Harris]
* Presentations:
** [https://wireless.vt.edu/symposium/2011/tutorials/Session%20A3_Part%203_Multirate_DSP_Wireless_2011.pdf Multirate Digital Signal Processing] by [http://electrical.sdsu.edu/faculty/frederick_harris.html Fredric J. Harris]
* Books:
** [http://www.amazon.com/Understanding-Digital-Signal-Processing-Edition/dp/0137027419/ Understanding Digital Signal Processing] by Richard G. Lyons
** [http://www.amazon.com/SOFTWARE-RECEIVER-DESIGN-COMMUNICATIONS-Hardcover/dp/B00IJ7FX44/ Software Receiver Design: Build Your Own Digital Communication System In Five Easy Steps] by C. Richard Johnson, Jr., William A. Sethares, & Andrew G. Klein
* Application Notes:
** [http://www.atmel.com/Images/doc9164.pdf Atmel: Manchester Coding Basics]

== Amateur Radio ==
* [[American Radio Relay League|http://www.arrl.org]]
* [[US Amateur Radio Bands|http://labyrinth13.com/Hambands_color.pdf]]

= Development =

See the [https://github.com/Nuand/bladeRF/tree/master/doc doc/] and [https://github.com/Nuand/bladeRF/tree/master/doc/development doc/development] directories for "official" development-related documentation.

== Recommended Reading ==
* [[git-essentials|Using Git and GitHub]]
* [[Debugging]]

== Project Maintenance ==
* [[Linux Distribution Status]]
* [[Static Analysis]]
* [[Proposals and Requests]]
* [[FX3-Firmware|FX3 Firmware Development]]

== Ongoing and future efforts ==
Working on new functionality or adding bladeRF support to a project? Create a page here to plan and document your efforts.

* Current and planned development [[tasks]]
* [[OpenBSC]]
