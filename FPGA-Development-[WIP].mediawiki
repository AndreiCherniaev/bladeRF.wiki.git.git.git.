This page contains information pertaining to digital logic development for the bladeRF's Altera Cyclone IV FPGA. See http://www.nuand.com/fpga.php for available FPGA bitstreams. "Hosted" is the default bitstream for the bladeRF.

= Overview =

The Altera Cyclone IV FPGA interfaces with the Cypress FX3 USB3.0 controller (CYUSB3014-BZXC), the Lime Micro LMS6002D RF transceiver, the Si5338 clock generator chip, the VCTCXO DAC. The primary purpose of the default "hosted" image is to shuffle I/Q samples between the FX3 and the LMS6002D, and configure the LMS6002D via SPI based on commands received from the FX3 via UART. Other purposes include controlling to the Si5338 clock generator chip and VCTCXO DAC, controlling the SPDT RF switches lying in between the LMS6002D and the SMA RX/TX ports, and interfacing with expansion boards.

The VHDL source code is separated into [https://github.com/Nuand/bladeRF/tree/master/hdl/fpga/platforms/bladerf/vhdl platform-specific code] and [https://github.com/Nuand/bladeRF/tree/master/hdl/fpga/ip IP cores]. IP is separated into nuand IP, OpenCores IP, and IP created from Altera tools. 

The top level bladerf entity ([https://github.com/Nuand/bladeRF/blob/master/hdl/fpga/platforms/bladerf/vhdl/bladerf.vhd bladerf.vhd]) defines the ports which are connected to external pins. Architectures for the bladerf entity are kept in different files for different designs. The hosted_bladerf architecture ([https://github.com/Nuand/bladeRF/blob/master/hdl/fpga/platforms/bladerf/vhdl/bladerf-hosted.vhd bladerf-hosted.vhd]) corresponds to the default bladeRF image. Other existing architectures include the [https://github.com/Nuand/bladeRF/blob/master/hdl/fpga/platforms/bladerf/vhdl/bladerf-adsb.vhd ADSB decoder] which performs signal processing to decode ADSB signals instead of shuffling IQ samples.

= Architecture =
This section will describe the structure of the default FPGA architecture [https://github.com/Nuand/bladeRF/blob/master/hdl/fpga/platforms/bladerf/vhdl/bladerf-hosted.vhd bladerf-hosted.vhd].

The FPGA consists of an Altera NIOS II soft processor for command+control and custom logic for sample shuffling+everything else. The code for the soft processor is found in [https://github.com/Nuand/bladeRF/tree/master/hdl/fpga/ip/altera/nios_system/software bladeRF/hdl/fpga/ip/altera/nios_system/software]. The "nios_system" component inside bladerf-hosted.vhd contains everything needed for command+control, including the NIOS II processor. IQ sample shuffling is kept separate from command+control. Samples are transferred between the FX3 and the FPGA via the FX3's GPIF II interface.

== Samples Architecture ==
The following diagram illustrates the modules that IQ samples flow through in the FPGA. Modules outside of the sample path have been omitted. Signals that do not carry IQ samples have also been omitted for simplicity.

[[https://raw.githubusercontent.com/ifrasch/files/master/bladeRF-FPGA-samples-architecture.png|bladeRF-FPGA-samples-architecture]]

= Development =
== Getting Started ==
=== Building FPGA image from source ===
Instructions for installing the required Quartus II free software and building the FPGA image and Quartus project file can be found in the README of [https://github.com/Nuand/bladeRF/tree/master/hdl bladeRF/hdl].
=== Tutorial: Blinking some LEDs ===

= Related Resources =
* [https://nuand.com/bladerf.pdf bladeRF schematic]
* [http://www.limemicro.com/download/LMS6002Dr2-DataSheet-1.2r0.pdf LMS6002D RF transceiver datasheet]
* [http://www.cypress.com/file/140296/download Cypress FX3 USB 3.0 controller datasheet]
* [https://www.silabs.com/Support%20Documents/TechnicalDocs/Si5338.pdf Si5338 clock generator datasheet]