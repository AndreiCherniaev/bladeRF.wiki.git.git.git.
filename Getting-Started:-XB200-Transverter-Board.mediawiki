This page provides an overview of the <b>XB-200</b> and provides some information on its use.

= Introduction =

The <b>XB-200 transverter board</b> is a block up-down converter that expands the bladeRFâ€™s lower frequency range, allowing the bladeRF to be used in HF/VHF applications. 

The RX and TX paths each have a set of 3&nbsp;filters, at the 50&nbsp;MHz&nbsp;&#8209;&nbsp;54&nbsp;MHz (6&nbsp;meter) band, 149&nbsp;MHz&nbsp;&#8209;&nbsp;159&nbsp;MHz (2&nbsp;meter) band, and 206&nbsp;MHz&nbsp;&#8209;&nbsp;235&nbsp;MHz (includes 1.25&nbsp;m) bands. There are also pairs of SMA connectors that will let users plug their own band filters into the RF path.

The XB-200 mates to the top of the bladeRF as follows. (There is only one possible orientation)
* XB-200 <b>U20</b> to bladeRF <b>U74</b>
* XB-200 <b>J5</b> to bladeRF <b>J61</b>
* XB-200 <b>J6</b> to bladeRF <b>J60</b>

For additional information, please see:
* [[XB-200 product page|http://www.nuand.com/blog/product/hf-vhf-transverter/]]
* [[XB-200 schematics|http://nuand.com/xb200.pdf]]
* [[XB-200 filter designs|http://nuand.com/RF_filters.pdf]]

= Hardware =

== Architecture ==

The transverter was meant to extend the range of the bladeRF without impairing the current frequency capabilities.  As such, the transverter has a bypass path as well as a mixed path.  The bypass path just connects the antenna port to the IF port directly without any modification to the signal.

The mixed path first has a filterbank for selectivity filtering.  This filterbank consists of 4 separate paths: 50&nbsp;MHz filter, 144&nbsp;MHz filter, 222&nbsp;MHz filter and a custom filter.  The custom filter can be put in line using the filter SMA connections on the transverter.

Each of the filters was designed to try to notch the terrestrial FM band as much as possible.  To be able to receive normal FM, the simplest way is to put an SMA jumper in the custom path (i.e., between the RX/TX <b>FILT</b> and <b>FILT-ANT</b> SMA connectors).

The block converter stage uses an ADF4351 to produce a 1248&nbsp;MHz high-side injection tone.  The mixing frequency was chosen because of it being about 3x higher than the 300&nbsp;MHz highest frequency we want to use and we can run the ADF4351 in integer-N mode, reducing spurs which may have resulted from a fractional-N mode of operation.  The output of the ADF4351 is always divided by 2x, so 38.4&nbsp;MHz&nbsp;*&nbsp;32.5&nbsp;=&nbsp;1248&nbsp;MHz.

Since high side injection is used, the LMS6002D on the bladeRF is tuning to 1248&nbsp;MHz - (desired frequency).  Moreover, there is a spectral inversion that is occurring due to the choice of high-side injection.  The LMS6002D is programmed to swap I and Q on the data bus being presented to the FPGA to correct for the flip.

== SMA Connectors ==

There are 10 SMA connectors on the XB-200. Below are brief descriptions of each.

<u>RX</u> 
* <b>RXIF</b> (<i>J3</i>): RX Intermediate Frequency. Connect this to the bladeRF RX port (<i>J53</i>) via an SMA cable.
* <b>RXANT</b> (<i>J12</i>): RX Input. Connect an antenna here.
* <b>RXFILT</b> (<i>J8</i>): Mixer-side of the RX custom filter path. Connect this directly to <b>RXFILT-ANT</b> to use no filter, or connect this to one end of your custom filter, and the other end of your filter to <b>RXFILT-ANT</b>.
* <b>RXFILT-ANT</b> (<i>J9</i>): Antenna-side of the RX custom filter path.
* <b>ADC</b> (<i>J14</i>): This SMA exposes the direct ADC sampling path (skipping the LMS6002). This can also be accessed without the XB-200 via <i>J61</i> on the bladeRF.

<u>TX</u>
* <b>TXIF</b> (<i>J1</i>): TX Intermediate Frequency. Connect this to the bladeRF TX port (<i>J54</i>) via an SMA cable.
* <b>TXANT</b> (<i>J2</i>): TX output. Connect an antenna here. When not transmitting, it is recommended to keep a dummy load or attenuator on this port.
* <b>TXFILT</b> (<i>J11</i>): Mixer-side of the TX custom filter path. Connect this directly to <b>TXFILT-ANT</b> to use no filter, or connect this to one end of your custom filter, and the other end of your filter to <b>TXFILT-ANT</b>.
* <b>TXFILT-ANT</b> (<i>J10</i>): Antenna-side of the TX custom filter path.
* <b>DAC</b> (<i>J15</i>): This SMA exposes the DAC direct sampling path (skipping the LMS6002). This can also be accessed without the XB-200 via <i>J60</i> on the bladeRF.

=== Example Connection ===

Note SMA cables on the top are just shorting the custom filter path SMA ports together (i.e. no filtering is being done). Depending on the application, it may be desirable to insert a filter instead. If the custom path is not used, the <code>RXFILT</code>/<code>RXFILT-ANT</code> and/or <code>TXFILT</code>/<code>TXFILT-ANT</code> may be left floating. The DAC and ADC SMA ports on the XB-200 may be left floating.

== Important Note: Removal of R62 and R63 ==
Resistors R62 and R63 on the XB-200 were populated for early production boards.  

Unfortunately, this causes unbalanced loading on the analog signals feeding the RF chain and will <b>severely degrade</b> performance.  It is highly recommended to <b>remove</b> R62 and R63 on the XB-200 if they are populated.

These resistors may be found slightly above the J15 DAC SMA connector, and are near the pins of J6 ([https://www.nuand.com/images/xb200_R62_R63.png image], [https://www.nuand.com/xb200.pdf schematic]).

== GPIO ports ==

GPIO pins are exposed on the XB-200 via <b>J7</b>, <b>J13</b>, and <b>J16</b>. libbladeRF API calls to manipulate these pins are a work in progress.

From page 7 of XB200 Schematic:

=== J7 ===
{|
|Pin||Signal||FPGA pin
|-
|1||GPIO3||EXP_GPIO_10
|-
|2||GPIO4||EXP_GPIO_11
|-
|3||VCCIO_R||1.8 V ref (FPGA right banks)
|-
|4||VCCIO_R||1.8 V ref (FPGA right banks)
|-
|5||GPIO1||EXP_GPIO_8
|-
|6||GPIO2||EXP_GPIO_9
|}

=== J13 ===
{|
|Pin||Signal||FPGA pin
|-
|1||GPIO6||EXP_GPIO_17
|-
|2||GPIO8||EXP_GPIO_18
|-
|3||Ground
|-
|4||Ground
|-
|5||VCCIO_R||1.8 V ref (FPGA right banks)
|-
|6||GPIO5||EXP_SPI_MOSI
|}

=== J16 ===
{|
|Pin||Signal||FPGA pin
|-
|1||GPIO9||EXP_GPIO_31
|-
|2||GPIO10||EXP_GPIO_32
|-
|3||GPIO11||EXP_GPIO_19
|-
|4||GPIO12||EXP_GPIO_20
|-
|5||GPIO13||EXP_GPIO_21
|-
|6||GPIO14||EXP_GPIO_24
|}

= Software Support =

This section is intended to provide information regarding support for the XB-200 in various pieces of software.  Please keep libbladeRF first, but feel free to add or stub out programs you'd like to see more information for.

== libbladeRF ==

The general procedure for using the XB-200 programmatically, via libbladeRF is as follows:
* With an open device handle, enable support for the XB-200 via: <br>[https://github.com/Nuand/bladeRF/blob/15340770ca59d30b82109ad8670aa0fe027ca9fe/host/libraries/libbladeRF/include/libbladeRF.h#L980 bladerf_expansion_attach(dev, BLADERF_XB_200)]
* Select the desired filter bank for the RX and TX paths. For example, to configure the RX module to use the 149&nbsp;MHz&nbsp;&#8209;&nbsp;159&nbsp;MHz filter: <br>[https://github.com/Nuand/bladeRF/blob/15340770ca59d30b82109ad8670aa0fe027ca9fe/host/libraries/libbladeRF/include/libbladeRF.h#L1012 bladerf_xb200_set_filterbank(dev, BLADERF_MODULE_RX, BLADERF_XB200_144M)]
** See the [https://github.com/Nuand/bladeRF/blob/15340770ca59d30b82109ad8670aa0fe027ca9fe/host/libraries/libbladeRF/include/libbladeRF.h#L492 bladerf_xb200_filter] enumeration for other options.
* Specify that the XB-200 mixer path should be used: <br>[https://github.com/Nuand/bladeRF/blob/15340770ca59d30b82109ad8670aa0fe027ca9fe/host/libraries/libbladeRF/include/libbladeRF.h#L1041 bladerf_xb200_set_path(dev, BLADERF_MODULE_RX, BLADERF_XB200_MIX)]
** To tune to the "normal" bladeRF ranges, bypass the XB-200 mixer by using the [https://github.com/Nuand/bladeRF/blob/15340770ca59d30b82109ad8670aa0fe027ca9fe/host/libraries/libbladeRF/include/libbladeRF.h#L498 BLADERF_XB200_BYPASS] value with the above function.

== bladeRF-cli ==
To tell the CLI that the XB-200 has been attached, simply run the command <code>xb 200 enable</code>.  This will expand the frequency range that the board is able to tune.

To select RX or TX filter banks, use the command <code>xb 200 filter <rx|tx> <50|144|222|custom
auto_1db|auto_3db</code>. 

"50" refers to the 50&#8209;54&nbsp;MHz (6&nbsp;meter) band, "144" refers to the 144&#8209;148&nbsp;MHz (2&nbsp;meter) band, and "222" refers to the 222&#8209;225&nbsp;MHz (1.25&nbsp;meter) band.  Technically, the filter associated with the "222" options covers 206&#8209;235&nbsp;MHz.

The "custom" option enables the custom filter bank path. 

The "auto_1db" and "auto_3b" options instruct libbladeRF to automatically select the appropriate filterbank based upon the filters' 1&nbsp;dB and 3&nbsp;dB points based upon the current device frequency.  Outside of these regions, the custom filter path will be selected.

== gr-osmosdr ==
As of commit [http://cgit.osmocom.org/gr-osmosdr/commit/?id=9cb023b00a36d04ad8ea7e0bf08ad0623ab3e95f 9cb023], gr-osmosdr supports natively the XB-200.  Note that the way to enable the board has changed slightly from the previous patched method, so be sure to read the next section very carefully and make appropriate modifications to the device string.

=== Enabling the XB-200 and Selecting Filters ===
To enable the XB-200 in software that utilizes gr-osmosdr, add '''xb200''' to the source/sink arguments string. By default, the filter bank selected will automatically tune with the tuned frequency at the 1&nbsp;dB points. Therefore, you must have the <b>FILT</b> and <b>FILT-ANT</b> connected through a filter, or directly connected together (no filter).

If you wish to select one of the other filter paths, append one of the following to the source/sink arguments string:
* <code>xb200=50M</code>
* <code>xb200=144M</code>
* <code>xb200=222M</code>
* <code>xb200=auto</code>
** This option will select an appropriate filter path based upon the selected center frequency with 1&nbsp;dB corners.  This is the default if no filter is selected.
* <code>xb200=auto3db</code>
** This option will select an appropriate file path based upon the selected center frequency with 3&nbsp;dB corners.
* <code>xb200=custom</code>
<br>
Below is an example device string that enables the XB-200 and selects the 144&nbsp;MHz&nbsp;&#8209;&nbsp;148&nbsp;MHz filter:
<pre>
bladerf=0,xb200=144M
</pre>

== GQRX ==
As this utilizes gr-osmosdr, you can simply follow the information in the previous section regarding the device arguments.

== SDR# ==
The bladeRF can be used with SDR# via a [https://github.com/jmichelp/sdrsharp-bladerf plugin written by Jean-Michel Picod].  Follow the instructions on his GitHub page, and feel free to discuss/comment/ask questions about the plugin in Jean-Michel's [https://nuand.com/forums/viewtopic.php?f=5&t=3597 forum thread].

== SDR-Radio ==
The current beta version (v2.3 build 1990 at the time of writing) of SDR-Radio assumes an XB-200 is attached, and performs the necessary calls to enable it.

If you do not have an XB-200 attached, this behavior causes a clock signal to be driven to the expansion port, which may introduce undesired artifacts. To avoid this, you can [https://github.com/Nuand/bladeRF/wiki/Getting-Started%3A-Windows#Building_from_source build your own modified bladeRF.dll] with a change that replaces [https://github.com/Nuand/bladeRF/blob/13dde0f6d53a11042a10cac6535539db3a7b53a4/host/libraries/libbladeRF/src/bladerf.c#L1305 this line in bladerf.c] with <code>status = 0;</code> to prevent the expansion board enable from taking place. You may then copy your modified DLL to the SDR-Radio installation directory, replacing the existing bladeRF.dll (which you should first back up).
