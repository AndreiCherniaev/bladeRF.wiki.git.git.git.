'''This page is a work in progress draft''

This page is intended to allow bladeRF developers and package maintainers to collaborate together on establishing common practices and procedures.

= Objectives = 
We want to ensure that package maintainers do not have to jump through hoops to get bladeRF packaged into their OS's package repositories.  Specifically, package maintainers '''should not''' have to apply patches to get the project to build as required by their procedures and guidelines.  More importantly, the project should ensure that end users to need not jump through hoops.

The project's CMake flags should provide the ability to sufficiently changes paths, build options, and the use of optional dependencies.  If this is found '''not''' to be the case, package maintainers should consider this to be a defect in the bladeRF project, and [https://github.com/Nuand/bladeRF/issues/new report it as a bug on the issue tracker].

= Tagging Schemes =

== Release tags ==

We are currently working toward a 2014.11 release, with at least monthly release candidates.  Releases are  represent points where all components are inter-operable and stable. 

Release tags are in the format: <code>YYYY.MM[-rcN]</code> (for example, ''2014.11-rc3''). Package maintainers will most likely only want track these tags, and not those used to track version bumps in individual components.

For example, to view release tags:
```
git tag | grep '^20[0-9]\{2\}\.[0-9]\{2\}\(-rc[0-9]\+\)\?' 
```


The top-level CHANGELOG shall list the components and their associated versions present in the release:
<pre>
This release candidate consists of the following versions:
  * FPGA bitstream v0.1.0
  * FX3 firmware v1.7.1
  * libbladeRF v0.17.0
  * bladeRF-cli v0.12.0
</pre>

== Repository components ==

The bladeRF repository contains multiple components, each of which are versioned separately.
* HDL for the FPGA
* Source code for FX3 firmware
* libbladeRF, the library for interfacing the the bladeRF
* bladeRF-cli, a command line interface built atop of libbladeRF. This provides users with a quick way to verify basic device functionality, change device settings, stream samples, load the FPGA, and update the device firmware.

The bladeRF team generally tries keep master in a state where all of the above components are compatible and inter-operable. If you build from master and the build fails or you find that components are incompatible, [https://github.com/Nuand/bladeRF/issues/new it should be reported as a defect].

These components will be tagged individually, in the form <code>COMPONENT-vX.Y.Z</code>. These tags are primarily intended to help the bladeRF developers keep track of stale and known-working points for the respective component.  ''Package maintainers will most likely want to ignore these tags, and only pay attention to the date-based release tags.''

The versions of these items do not correlate across components. (i.e., there is ''no implied relationship'' between bladeRF-cli-vX.Y.Z and libbladeRF-vX.Y.Z)

As we move out of "unstable" mode in the near future, we will be looking to do a much better job providing meaningful versions for these components (e.g., via [http://semver.org/ semver]).

= Pre-built Binaries =

Official pre-built [https://www.nuand.com/fx3.php FX3 firmware images] and [https://www.nuand.com/fpga.php FPGA bitstream files] are hosted on the Nuand website.  Whether these binaries may be directly included in packages will likely vary with OS/Distro policies.  

Be aware that while that Nuand's HDL files and FX3 source code are MIT licensed, the required Altera tools and some Cypress libraries required to build these items are not open source; this is unfortunately unavoidable.

The links to the prebuilt binaries will be kept in a consistent naming scheme, with md5sums, to allow for these to be fetched via scripts.

= Optional Dependencies =

'''TO DO:''' Provide an overview of the optional dependencies, and what benefits they provide.

== bladeRF-cli ==
* [http://www.astro.caltech.edu/~mcs/tecla/ libtecla]
** As used in bladeRF-cli, this library provides command history, tab completion, filename expansion, and vi & emacs bindings. As this library '''significantly''' improves the usability of bladeRF-cli, it is recommended to make this a dependency, when possible.
* pandoc
** '''TO DO'': Used for bladeRF-cli auto generation. If the bladeRF devs are doing their jobs, this shouldn't be necessary -- the fallbacks should be up to date at YYYY-MM[-rcN] tags.

= Configuration and Build =
'''TO DO:''' Let's establish where to build from (e.g., the top level or host/), and which flags should be used. For example:
* <code>-DTAGGED_RELEASE=Yes</code> to drop the <code>-git-<changeset></code> suffix on version numbers.
* <code>-DCMAKE_BUILD_TYPE=Release</code> to build as a release without debug symbols or <code>-DCMAKE_BUILD_TYPE=RelWithDebInfo</code> to build as a release with debug symbols.
* ''TO DO'' Discuss <code>-DBUILD_DOCUMENTATION=ON</code> and related documentation sub-components (and their associated dependencies)

= Package Division =
'''TO DO:''' Provide some samples and recommendations for dividing up the various build artifacts into appropriately grouped packages.
