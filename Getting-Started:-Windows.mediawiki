= Tools and Dependencies =

== Obtaining git for Windows ==
# Download and install [http://code.google.com/p/msysgit/downloads/list?can=2&q=%22Full+installer+for+official+Git+for+Windows%22 msysgit] If you plan to submit patches to the bladeRF project, please select the _Checkout as-is, commit Unix-style line endings_ option in the installer.
# Download and install [http://code.google.com/p/tortoisegit/wiki/Download tortoisegit]

For more information, see the [https://github.com/msysgit/msysgit/wiki/InstallMSysGit mysysgit] and [http://code.google.com/p/tortoisegit/wiki/SetupHowTo tortoisegit] wiki pages about their install procedures.

== Installing Visual Studio 2012 Express Desktop ==
# Download [http://www.microsoft.com/visualstudio/eng/products/visual-studio-express-for-windows-desktop Visual Studio 2012 Express Desktop] from Microsoft.
# Follow the installation instructions, including any post-install updates.

''Note:'' Visual Studio 2012 Express Desktop corresponds to Visual Studio 11 in CMake.

== Installing libusbx ==

# Download the latest Windows binary release of libusbx, which also include development headers: https://sourceforge.net/projects/libusbx/files/releases/1.0.16/binaries/
# Extract the contents to a location of your choice. Make note of this location so that you can later provide it to CMake. The default configuration assumes that files will be in ```C:/Program Files (x86)/libusbx-1.0.16``` If you wish to change the directory, edit ```\host\cmake\modules\FindLibUSB.cmake```
# Get the device driver installer (zadig): http://sourceforge.net/projects/libwdi/files/zadig/
# Open Zadig. 
# Go to Device->Create New Device. 
# Type a device name (i.e., "bladeRF") in the text box. In the driver spinbox, select libusbK. Specify the VID/PID (`1d50`/`6066`) in the USB ID fields.
# Plug the device into the computer and open Device Manager.  A new device called `bladeRF` should show up with a yellow bang next to it in device manager.
# Right-click on the `bladeRF` entry and select "Update Driver Software...".  Choose "Browse my computer for driver software", then "Let me pick from a list of device drivers on my computer".  Click "Have Disk..." and point it to the location that Zadig installed the driver to (C:\usb_driver).  Select "bladeRF" and continue through the wizard.
# Device Manager should now show `bladeRF` under `libusbK USB Devices`.

== Installing pthreads-win32 ==
The pthreads library is required to build a few tests and utilities. A few steps are required to install this pthreads implementation. See [http://www.sourceware.org/pthreads-win32/ the pthreads-win32 website] for more information.

# Download the latest release. Currently this is [ftp://sourceware.org/pub/pthreads-win32/pthreads-w32-2-9-1-release.zip the pthreads-win32 website].
# Extract the contents of the release zip.
# Copy the contents of the _Pre-built.2_ directory to _C:\Program Files (x86)\pthreads-win32

== CMake ==
# Download and install CMake for Windows: http://www.cmake.org/cmake/resources/software.html
# Run the CMake GUI utility. 
# Under "Where is the source code", browse to ```some_dir/bladeRF/host```. 
# Create a new directory, ```some_dir/bladeRF/host/build```. 
# Under "Where to build the binaries", browse to the newly created /bladeRF/host/build. Click the Configure button. 
# Select your appropriate version of Visual Studio.  Current development is done using "Visual Studio 11" or "Visual Studio 11 Win64" as the generator (Visual Studio 2012).  Select "Use default native compilers", then click "Finish". 
# If the configuration fails, double check the values for `LIBUSB_PATH` and `LIBPTHREADSWIN32_PATH`, and re-run the configuration.
# Click on the Generate button.
# A visual studio solution should now be available, ```bladeRF.sln``` 

= Compiling bladeRF libraries and tools with Visual Studio =
# CMake has created a `bladeRF.sln` file.  Open Visual Studio, and open this file.
# The following projects should show up in the Solution Explorer.
## ALL_BUILD
## bladeRF-cli
## INSTALL
## libbladerf_shared
## libbladerf_test_async
## libbladerf_test_repeater
## uninstall
## win_postbuild
## ZERO_CHECK
# Run <code>Build -> Build Solution</code>
# After the build completes, you should see an <code>output</code> directory in the build directory, containing either a Debug or Release subdirectory. These directories will contain generated executables, libraries, and will contain copies of the required DLLs.
