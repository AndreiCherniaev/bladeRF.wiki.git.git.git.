This guide describes the process of building and installing the bladeRF host libraries and tool for a Mac OSX system, and quickly getting a device up and running using pre-built firmware and FPGA images.

= Installing Dependencies =

Install XCode from Apple, as you will need a compiler. This is available in the App Store.

If you plan to use graphical tools (i.e., GNU Radio Companion), ensure you have X11 installed. See the [http://xquartz.macosforge.org/landing/ XQuartz project] for additional information and instructions.

Next, install a package management system, such as [http://www.macports.org/ MacPorts] or [http://brew.sh/ Homebrew].

= Fetching bladeRF packages =

== MacPorts ==

With MacPorts, the bladeRF utilities can be installed with:

<pre>$ sudo port install bladeRF +tecla</pre>

Ensure that your shell configuration (e.g., .bashrc, .zshrc) contains the following items (adjusted accordingly):
<pre>
export DISPLAY=:0.0
export PATH=/opt/local/bin:/opt/local/sbin:$PATH
export MANPATH=/opt/local/share/man:$MANPATH
export PYTHONPATH=/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages:/opt/local/lib/python2.7/site-packages:${PYTHONPATH}
</pre>

== Homebrew==

If you're using Homebrew, install the dependencies via the following command. Note that you want to select libusb'''x'''.

<pre>$ brew install libusbx pkgconfig cmake libtecla</pre>

= Building bladeRF libraries and tools from source =
If you've installed bladeRF items via a package manager, you can skip this section.  However, if you're interested in diving into the host-side code, continue on!

Required dependencies include: libusb(x), CMake.  libtecla is optional, but highly recommended for bladeRF-cli.  MacPorts and Homebrew provide packages for all of these. 

== Clone the bladeRF git repository ==

To obtain the latest source code for the first time, clone the Nuand git repository via:
<pre>
$ git clone https://github.com/Nuand/bladeRF.git
$ cd ./bladeRF
</pre>

In the future, you can update the repository via:
<pre>
$ git pull
</pre>

== Configure the build ==

First enter the directory containing the host source. Then create and enter a directory to perform the build in. By working out of the a 'build' directory, it's easy to later clean up, by simply removing 'build/'.

<pre>
$ cd host/
$ mkdir build; cd build
</pre>


Next, configure the build. In the below example, we:
* Set up a Debug build
* Specify that files should be installed into /opt/local

<pre>
$ cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/opt/local
</pre>

== Perform the build and installation ==

Kick off the build and install to the location specified by ''CMAKE_INSTALL_PREFIX''.

<pre>
$ make
$ sudo make install
</pre>

== Uninstalling later ==
Note that from this same directory, you can run the following to uninstall the files place on your system in the previous step. <pre>sudo make uninstall</pre> 

The ''install_manifest.txt'' file, created after running the install step successfully, lists all the files installed.  It is a good idea to back up this file if you plan on removing this build directory later.

<br>

= Checking basic device operation =

Before continuing on with the rest of this article, head over to the [[Getting Started: Verifying Basic Device Operation]] page. If you have any issues:
* Try both USB 2.0 and 3.0 ports
* Check if the bladeRF appears without problems in Command-Space 'System Information' to see your USB devices.
* Head over to the [[Troubleshooting]] page.

<br>

= GNU Radio and gr-osmosdr =

== MacPorts ==

The following command may be used to install GNU Radio via [https://trac.macports.org/browser/trunk/dports/science/gnuradio/Portfile MacPorts], and any necessary dependencies.

<pre>
$ sudo port install gnuradio +grc +swig +wxgui +qtgui +python27
</pre>

After the installation completes (it may take quite some time), you can verify the installation by running '''gnuradio-companion'''. Note: XQuartz will automatically start if it is not already started.

To get support for the bladeRF source and sink in GnuRadio, you will need to install [https://trac.macports.org/browser/trunk/dports/science/gr-osmosdr/Portfile gr-osmosdr]. 

<pre>
$ sudo port install gr-osmosdr
</pre>

If you are having difficulty selecting a bladeRF source/sink, you can check a list of supported device types in osmosdr with the following command.

<pre>
$ osmocom_fft 2>&1 | grep "source types"
built-in source types: file fcd rtl rtl_tcp uhd hackrf bladerf netsdr 
</pre>

If you have a good graphics card in your mac that supports opencl + opengl concurrently (currently it seems Intel's Iris Pro doesn't?), you can also install the fosphor sinks for gnuradio with.

<pre>
$ sudo port install gr-fosphor
</pre>

== Homebrew ==
The following is a bit vague, but it is assured to be workable.
As of Jan 2014 it seems that that gnuradio is still not yet part of the supported tree for Homebrew.
There are, however, several 3rd-party scripts.  One of them by user "titanous."
To use this, you need to run:
<pre>
  $ brew tap titanous/homebrew-gnuradio
</pre>
but it is advisable to see the README at https://github.com/titanous/homebrew-gnuradio since
there are several prerequisites and some options to consider.
Subsequent steps are akin to those under "Building gr-osmosdr from source" (above).